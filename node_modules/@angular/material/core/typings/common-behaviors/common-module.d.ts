/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { InjectionToken } from '@angular/core';
import { HammerLoader } from '@angular/platform-browser';
/** @docs-private */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/cdk/bidi';
export declare function MATERIAL_SANITY_CHECKS_FACTORY(): boolean;
/** Injection token that configures whether the Material sanity checks are enabled. */
export declare const MATERIAL_SANITY_CHECKS: InjectionToken<boolean>;
/**
 * Module that captures anything that should be loaded and/or run for *all* Angular Material
 * components. This includes Bidi, etc.
 *
 * This module should be imported to each top-level component module (e.g., MatTabsModule).
 */
export declare class MatCommonModule {
    private _sanityChecksEnabled;
    private _hammerLoader?;
    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */
    private _hasDoneGlobalChecks;
    /** Whether we've already checked for HammerJs availability. */
    private _hasCheckedHammer;
    /** Reference to the global `document` object. */
    private _document;
    /** Reference to the global 'window' object. */
    private _window;
    constructor(_sanityChecksEnabled: boolean, _hammerLoader?: HammerLoader | undefined);
    /** Whether any sanity checks are enabled */
    private _areChecksEnabled;
    /** Whether the code is running in tests. */
    private _isTestEnv;
    private _checkDoctypeIsDefined;
    private _checkThemeIsPresent;
    /** Checks whether the material version matches the cdk version */
    private _checkCdkVersionMatch;
    /** Checks whether HammerJS is available. */
    _checkHammerIsAvailable(): void;
    static ɵmod: ɵngcc0.ɵɵNgModuleDefWithMeta<MatCommonModule, never, [typeof ɵngcc1.BidiModule], [typeof ɵngcc1.BidiModule]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDef<MatCommonModule>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLW1vZHVsZS5kLnRzIiwic291cmNlcyI6WyJjb21tb24tbW9kdWxlLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IEdvb2dsZSBMTEMgQWxsIFJpZ2h0cyBSZXNlcnZlZC5cclxuICpcclxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcclxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2FuZ3VsYXIuaW8vbGljZW5zZVxyXG4gKi9cclxuaW1wb3J0IHsgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgSGFtbWVyTG9hZGVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbi8qKiBAZG9jcy1wcml2YXRlICovXHJcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIE1BVEVSSUFMX1NBTklUWV9DSEVDS1NfRkFDVE9SWSgpOiBib29sZWFuO1xyXG4vKiogSW5qZWN0aW9uIHRva2VuIHRoYXQgY29uZmlndXJlcyB3aGV0aGVyIHRoZSBNYXRlcmlhbCBzYW5pdHkgY2hlY2tzIGFyZSBlbmFibGVkLiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjb25zdCBNQVRFUklBTF9TQU5JVFlfQ0hFQ0tTOiBJbmplY3Rpb25Ub2tlbjxib29sZWFuPjtcclxuLyoqXHJcbiAqIE1vZHVsZSB0aGF0IGNhcHR1cmVzIGFueXRoaW5nIHRoYXQgc2hvdWxkIGJlIGxvYWRlZCBhbmQvb3IgcnVuIGZvciAqYWxsKiBBbmd1bGFyIE1hdGVyaWFsXHJcbiAqIGNvbXBvbmVudHMuIFRoaXMgaW5jbHVkZXMgQmlkaSwgZXRjLlxyXG4gKlxyXG4gKiBUaGlzIG1vZHVsZSBzaG91bGQgYmUgaW1wb3J0ZWQgdG8gZWFjaCB0b3AtbGV2ZWwgY29tcG9uZW50IG1vZHVsZSAoZS5nLiwgTWF0VGFic01vZHVsZSkuXHJcbiAqL1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBNYXRDb21tb25Nb2R1bGUge1xyXG4gICAgcHJpdmF0ZSBfc2FuaXR5Q2hlY2tzRW5hYmxlZDtcclxuICAgIHByaXZhdGUgX2hhbW1lckxvYWRlcj87XHJcbiAgICAvKiogV2hldGhlciB3ZSd2ZSBkb25lIHRoZSBnbG9iYWwgc2FuaXR5IGNoZWNrcyAoZS5nLiBhIHRoZW1lIGlzIGxvYWRlZCwgdGhlcmUgaXMgYSBkb2N0eXBlKS4gKi9cclxuICAgIHByaXZhdGUgX2hhc0RvbmVHbG9iYWxDaGVja3M7XHJcbiAgICAvKiogV2hldGhlciB3ZSd2ZSBhbHJlYWR5IGNoZWNrZWQgZm9yIEhhbW1lckpzIGF2YWlsYWJpbGl0eS4gKi9cclxuICAgIHByaXZhdGUgX2hhc0NoZWNrZWRIYW1tZXI7XHJcbiAgICAvKiogUmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgYGRvY3VtZW50YCBvYmplY3QuICovXHJcbiAgICBwcml2YXRlIF9kb2N1bWVudDtcclxuICAgIC8qKiBSZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCAnd2luZG93JyBvYmplY3QuICovXHJcbiAgICBwcml2YXRlIF93aW5kb3c7XHJcbiAgICBjb25zdHJ1Y3Rvcihfc2FuaXR5Q2hlY2tzRW5hYmxlZDogYm9vbGVhbiwgX2hhbW1lckxvYWRlcj86IEhhbW1lckxvYWRlciB8IHVuZGVmaW5lZCk7XHJcbiAgICAvKiogV2hldGhlciBhbnkgc2FuaXR5IGNoZWNrcyBhcmUgZW5hYmxlZCAqL1xyXG4gICAgcHJpdmF0ZSBfYXJlQ2hlY2tzRW5hYmxlZDtcclxuICAgIC8qKiBXaGV0aGVyIHRoZSBjb2RlIGlzIHJ1bm5pbmcgaW4gdGVzdHMuICovXHJcbiAgICBwcml2YXRlIF9pc1Rlc3RFbnY7XHJcbiAgICBwcml2YXRlIF9jaGVja0RvY3R5cGVJc0RlZmluZWQ7XHJcbiAgICBwcml2YXRlIF9jaGVja1RoZW1lSXNQcmVzZW50O1xyXG4gICAgLyoqIENoZWNrcyB3aGV0aGVyIHRoZSBtYXRlcmlhbCB2ZXJzaW9uIG1hdGNoZXMgdGhlIGNkayB2ZXJzaW9uICovXHJcbiAgICBwcml2YXRlIF9jaGVja0Nka1ZlcnNpb25NYXRjaDtcclxuICAgIC8qKiBDaGVja3Mgd2hldGhlciBIYW1tZXJKUyBpcyBhdmFpbGFibGUuICovXHJcbiAgICBfY2hlY2tIYW1tZXJJc0F2YWlsYWJsZSgpOiB2b2lkO1xyXG59XHJcbiJdfQ==